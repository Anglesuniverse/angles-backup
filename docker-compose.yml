version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: angles_os
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/angles_os
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/angles_os
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
    command: python api/workers/worker.py

volumes:
  postgres_data:

# Note: Replit may not support Docker Compose natively
# This file ensures parity between local development and remote server deployment